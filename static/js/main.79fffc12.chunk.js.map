{"version":3,"sources":["Map.js","Grid.js","Graph.js","Drawer.js","App.js","Home.js","serviceWorker.js","index.js"],"names":["geojsonLayer","map","style","width","height","MapData","props","state","data","toposkaermkortwmts","L","tileLayer","wms","layers","token","format","attribution","center","zoom","legend","control","position","onAdd","div","DomUtil","create","innerHTML","addTo","scale","undefined","removeLayer","geoJSON","onEachFeature","feature","layer","bindPopup","properties","status","navn","pointToLayer","latlng","marker","icon","iconUrl","selector","shadowUrl","iconAnchor","shadowAnchor","popupAnchor","centerCoords","features","filter","includes","length","geometry","coordinates","getCenterPoint","setView","fitBounds","getBounds","this","renderMap","renderFeatures","console","log","id","React","Component","StatusFormatter","value","color","StatusTypeProvider","formatterComponent","PnummerFormatter","link","href","target","rel","PnummerProvider","getRowId","row","GridData","rows","sorting","columnName","direction","statusColumns","pcols","grouping","changeSorting","setState","changeGrouping","updateData","total","totalRendered","pc","index","s","replace","Paper","textAlign","columns","name","title","defaultFilters","defaultSorting","for","defaultColumnWidths","showSortingControls","filteredRows","PureComponent","GraphData","clicked","fill","catData","dat","tilfl","x","y","getSummaryData","theme","VictoryTheme","material","domainPadding","barWidth","dataComponent","events","onMouseOver","fillColor","d","datum","labels","useStyles","makeStyles","list","fullList","nested","paddingLeft","TemporaryDrawer","classes","handleDrawer","filterCols","handleCheckedFilters","reset","doFilter","filterWords","useState","postdistrikt","postnummer","opened","setOpened","Drawer","anchor","open","drawerOpen","onClose","categories","cols","comps","forEach","categorie","key","col","ListItem","button","className","ListItemText","primary","Object","keys","ListItemSecondaryAction","Checkbox","checked","values","onChange","e","edge","_list","role","List","ListItemIcon","Button","variant","size","onClick","dense","text","Fragment","handleClick","Collapse","in","timeout","unmountOnExit","component","disablePadding","sideList","moment","locale","ExcelFile","ReactExport","ExcelSheet","ExcelColumn","createMuiTheme","typography","useNextVariants","suppressDeprecationWarnings","uniqueValuesGroupedByKey","arrOfObj","ret","uniqueElemsOfSameKey","_arrOfObj","colValues","elem","Set","TabContainer","children","App","startDate","subtract","startOf","endDate","endOf","kommuner","komkode","komnr","csvData","loading","completed","canSendRequest","filterOpen","alertOpen","alertMessage","uniqueVals","dataToRender","handleChange","bind","handleStart","handleEnd","handleSelect","handleDoneClick","handleFilterOpen","handleFilterClose","handleDrawerOpen","updateRenderDataFromTable","onAlertClose","filteredCategories","filters","cat","temp","obj","res","indexOf","message","event","split","group","checkedGroup","indexToUpdate","findIndex","elementToUpdate","slice","that","jQuery","ajax","url","type","dataType","success","koms","preveState","dataUrl","csv","form","virksomhedsform","getVirkForm","prevState","persist","getData","getKommuner","navigate","date","MuiThemeProvider","AppBar","Toolbar","Grid","container","item","xs","Typography","classnames","noValidate","autoComplete","TextField","select","label","placeholder","textField","SelectProps","native","helperText","InputLabelProps","shrink","kom","komnavn","utils","MomentUtils","DatePicker","IconButton","arial-label","Tooltip","element","filename","Tabs","centered","Tab","aria-label","Graph","withStyles","root","flexGrow","display","flexWrap","marginLeft","spacing","marginRight","marginTop","menu","progress","margin","source","createHashSource","history","createHistory","Home","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.79fffc12.chunk.js","sourcesContent":["import React from \"react\";\nimport L from \"leaflet\";\n//import axios from \"axios\";\n\nconst style = {\n  width: \"100%\",\n  height: \"600px\"\n};\n\nvar geojsonLayer;\nvar map;\n\nclass MapData extends React.Component {\n  constructor(props) {\n    super(props); // console.log(props.data);\n    this.state = {\n      data: {}\n    };\n  }\n\n  renderMap() {\n    var myAttributionText =\n      '&copy; <a target=\"_blank\" href=\"https://download.kortforsyningen.dk/content/vilk%C3%A5r-og-betingelser\">Styrelsen for Dataforsyning og Effektivisering</a>';\n    var kftoken = \"d12107f70a3ee93153f313c7c502169a\";\n    var toposkaermkortwmts = L.tileLayer.wms(\n      \"https://services.kortforsyningen.dk/topo_skaermkort\",\n      {\n        layers: \"dtk_skaermkort_daempet\",\n        token: kftoken,\n        format: \"image/png\",\n        attribution: myAttributionText\n      }\n    );\n    map = L.map(\"map\", {\n      center: [55.876823, 9.961644],//[55.2, 12.2],\n      zoom: 7,\n      layers: [\n        // L.tileLayer(\n        //   \"https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}\",\n        //   {\n        //     attribution:\n        //       'Map data &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors, <a href=\"http://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery © <a href=\"http://mapbox.com\">Mapbox</a>',\n        //     maxZoom: 14,\n        //     id: \"baffioso.ie1ok8lg\",\n        //     accessToken:\n        //       \"pk.eyJ1IjoiYmFmZmlvc28iLCJhIjoiT1JTS1lIMCJ9.f5ubY91Bi42yPnTrgiq-Gw\"\n        //   }\n        // )\n        toposkaermkortwmts\n      ]\n    });\n\n    var legend = L.control({ position: \"bottomleft\" });\n    legend.onAdd = function(map) {\n      var div = L.DomUtil.create(\"div\", \"legend\");\n      div.innerHTML += \"<h4>Signaturforklaring</h4>\";\n      div.innerHTML +=\n        '<i style=\"background:#0020d7\"></i><span>NyStartet</span><br>';\n      div.innerHTML +=\n        '<i style=\"background:#d79700\"></i><span>Fraflyttet</span><br>';\n      div.innerHTML +=\n        '<i style=\"background:#298b30\"></i><span>Tilflyttet</span><br>';\n      div.innerHTML +=\n        '<i style=\"background:#c10a0a\"></i><span>Ophørt</span><br>';\n      return div;\n    };\n    legend.addTo(map);\n\n    L.control.scale().addTo(map);\n  }\n  renderFeatures(data) {\n    //console.log('renderfeatures'); console.log(data);\n    var costumIcon = function(status) {\n      function selector(status) {\n        switch (status) {\n          case \"Tilflytter\":\n            return \"img/t.png\";\n          case \"Fraflytter\":\n            return \"img/f.png\";\n          case \"Nystartet\":\n            return \"img/n.png\";\n          case \"Ophørt\":\n            return \"img/o.png\";\n          default:\n            break;\n        }\n      }\n      return L.icon({\n        iconUrl: selector(status),\n        shadowUrl: \"img/shadow.png\",\n        iconAnchor: [16, 37],\n        shadowAnchor: [20, 35],\n        popupAnchor: [0, -30]\n      });\n    };\n\n    if (geojsonLayer !== undefined) {\n      map.removeLayer(geojsonLayer);\n    }\n\n    function getCenterPoint(data) {\n      let features = data.filter(feature =>\n        [\"Nystartet\", \"\"].includes(feature.properties.status)\n      );\n      if (features.length === 0) return null;\n      return features[0].geometry.coordinates;\n    }\n    function onEachFeature(feature, layer) {\n      layer.bindPopup(\n        \"<strong>\" +\n          feature.properties.status +\n          \"</strong></br><hr>\" +\n          feature.properties.navn +\n          '</br><a href=\"https://datacvr.virk.dk/data/visenhed?enhedstype=produktionsenhed&id=' +\n          feature.properties[\"p-nummer\"] +\n          '\" target=\"_blank\">Se mere her</a>'\n      );\n    }\n\n    geojsonLayer = L.geoJSON(data, {\n      onEachFeature: onEachFeature,\n      pointToLayer: function(feature, latlng) {\n        //return L.circleMarker(latlng, geojsonMarkerOptions);\n        return L.marker(latlng, {\n          icon: costumIcon(feature.properties.status)\n        });\n      }\n    }).addTo(map);\n\n    let centerCoords = getCenterPoint(data);\n    if (centerCoords) map.setView([centerCoords[1], centerCoords[0]], 12);\n    else map.fitBounds(geojsonLayer.getBounds());\n  }\n  componentDidMount() {\n    this.renderMap();\n    if (this.props.data.length > 0) {\n      this.renderFeatures(this.props.data);\n    }\n  }\n\n  componentDidUpdate() {\n    console.log(\"componentdidupdate\");\n    //const { data } = this.props;\n    //this.renderFeatures(data);\n    if (this.props.data.length > 0) {\n      this.renderFeatures(this.props.data);\n    } else {\n      console.log(\"props empty\");\n    }\n  }\n\n  renderMarkers(data) {\n    //select marker depending on status\n    //let mymap = this.map;\n    var costumIcon = function(status) {\n      function selector(status) {\n        switch (status) {\n          case \"Tilflytter\":\n            return \"img/t.png\";\n          case \"Fraflytter\":\n            return \"img/f.png\";\n          case \"Nystartet\":\n            return \"img/n.png\";\n          case \"Ophørt\":\n            return \"img/o.png\";\n          default:\n            break;\n        }\n      }\n      return L.icon({\n        iconUrl: selector(status),\n        shadowUrl: \"img/shadow.png\",\n        iconAnchor: [16, 37],\n        shadowAnchor: [20, 35],\n        popupAnchor: [0, -30]\n      });\n    };\n    //check if there is markers on the map and remove\n    if (geojsonLayer !== undefined) {\n      map.removeLayer(geojsonLayer);\n    }\n\n    function onEachFeature(feature, layer) {\n      //console.log(layer);\n      layer.bindPopup(\n        \"<strong>\" +\n          feature.properties.status +\n          \"</strong></br><hr>\" +\n          feature.properties.navn +\n          '</br><a href=\"https://datacvr.virk.dk/data/visenhed?enhedstype=produktionsenhed&id=' +\n          feature.properties[\"p-nummer\"] +\n          '\" target=\"_blank\">Se mere her</a>'\n      );\n    }\n\n    geojsonLayer = L.geoJSON(data, {\n      onEachFeature: onEachFeature,\n      pointToLayer: function(feature, latlng) {\n        return L.marker(latlng, {\n          icon: costumIcon(feature.properties.status)\n        });\n      }\n    }).addTo(map);\n\n    // console.log(geojsonLayer.getBounds());\n    // map.fitBounds(geojsonLayer.getBounds());\n  }\n\n  render() {\n    return <div id=\"map\" style={style}></div>;\n  }\n}\n\nexport default MapData;\n","import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n} from \"@devexpress/dx-react-core\";\n\nimport {\n  SortingState,\n  IntegratedSorting,\n  FilteringState,\n  IntegratedFiltering,\n  DataTypeProvider\n} from \"@devexpress/dx-react-grid\";\n\nimport {\n  Grid,\n  VirtualTable,\n  TableHeaderRow,\n  TableFilterRow,\n  TableColumnResizing\n} from \"@devexpress/dx-react-grid-material-ui\";\n\nconst getColor = status => {\n  if (status === \"Fraflytter\") return \"orange\";\n  else if (status === \"Tilflytter\") return \"green\";\n  else if (status === \"Nystartet\") return \"blue\";\n  else if (status === \"Ophørt\") return \"red\";\n  else return \"blue\";\n};\n\nconst StatusFormatter = ({ value }) => {\n  let color = getColor(value);\n  return <b style={{ color: color }}>{value}</b>;\n};\n\nconst StatusTypeProvider = props => (\n  <DataTypeProvider formatterComponent={StatusFormatter} {...props} />\n);\n\nconst PnummerFormatter = ({ value }) => {\n  let link = `https://datacvr.virk.dk/data/visenhed?enhedstype=produktionsenhed&id=${value}`;\n  return (\n    <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n      {value}\n    </a>\n  );\n};\n\nconst PnummerProvider = props => (\n  <DataTypeProvider formatterComponent={PnummerFormatter} {...props} />\n);\n\n\nconst getRowId = row => {\n  return row[\"keyIndex\"];\n};\n\nclass GridData extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rows: [],\n      data: [],\n      sorting: [{ columnName: \"hovedbranche\", direction: \"desc\" }],\n      statusColumns: [\"status\"],\n      pcols: [\"p-nummer\"],\n      grouping: [{ columnName: \"status\" }]\n    };\n    this.changeSorting = sorting => this.setState({ sorting });\n    this.changeGrouping = grouping => this.setState({ grouping });\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate() {}\n\n  render() {\n    const updateData = this.props.updateData;\n    const total = this.props.total;\n    const totalRendered = this.props.totalRendered;\n    const cols = [\n      { name: \"status\", title: \"Status\" },\n      { name: \"cvr-nummer\", title: \"CVR nummer\" },\n      { name: \"p-nummer\", title: \"P nummer\" },\n      { name: \"hovedbranche\", title: \"Branche\" },\n      { name: \"virksomhedsform\", title: \"virksomhedsform\" },\n      { name: \"navn\", title: \"Virksomhedsnavn\" },\n      { name: \"fuldt ansvarlige deltagere\", title: \"Kontaktperson\" },\n      { name: \"kvartalbes_interval\", title: \"Antal ansatte\" },\n      { name: \"kommunekode\", title: \"Kommunekode\" },\n      { name: \"vejnavn\", title: \"Vejnavn\" },\n      { name: \"husnummer\", title: \"Husnummer\" },\n      { name: \"postnummer\", title: \"Postnummer\" },\n      { name: \"postdistrikt\", title: \"By\" },\n      { name: \"emailadresse\", title: \"Email\" },\n      { name: \"indlæst dato\", title: \"Indlæst dato\" }\n    ];\n\n    const defaultColumnWidths = [\n      { columnName: \"status\", width: 100 },\n      { columnName: \"cvr-nummer\", width: 100 },\n      { columnName: \"p-nummer\", width: 100 },\n      { columnName: \"hovedbranche\", width: 150 },\n      { columnName: \"virksomhedsform\", width: 150 },\n      { columnName: \"navn\", width: 150 },\n      { columnName: \"fuldt ansvarlige deltagere\", width: 120 },\n      { columnName: \"kvartalbes_interval\", width: 120 },\n      { columnName: \"kommunekode\", width: 120 },\n      { columnName: \"vejnavn\", width: 120 },\n      { columnName: \"husnummer\", width: 120 },\n      { columnName: \"postnummer\", width: 120 },\n      { columnName: \"postdistrikt\", width: 120 },\n      { columnName: \"emailadresse\", width: 120 },\n      { columnName: \"indlæst dato\", width: 120 }\n    ];\n\n    const { statusColumns } = this.state;\n    const pc = this.state.pcols;\n    const rows = this.props.data.map((feature, index) => {\n      feature.properties[\"keyIndex\"] = index;\n      let s = feature.properties['fuldt ansvarlige deltagere'];\n      if(s !== null && s.length > 0)\n        feature.properties['fuldt ansvarlige deltagere'] = s.replace(/\\\"/g,'');\n      if(s === \"NULL\")\n        feature.properties['fuldt ansvarlige deltagere'] = \"\";\n      return feature.properties;\n    });\n\n    // console.log(rows);\n    return (\n      <Paper\n        style={{\n          height: \"600px\"\n        }}\n      >\n  <h6 style={{textAlign:\"center\"}}>{`${totalRendered} ud af ${total}`}</h6>\n        <Grid\n          rows={rows}\n          columns={cols}\n          getRowId={getRowId}\n          style={{\n            height: \"100%\"\n          }}\n        >\n          <FilteringState defaultFilters={[]} />\n          <IntegratedFiltering />\n          <SortingState\n            defaultSorting={[{ columnName: \"status\", direction: \"desc\" }]}\n          />\n          <IntegratedSorting />\n          <StatusTypeProvider for={statusColumns} />\n          <PnummerProvider for={pc} />\n          <VirtualTable height={600} />\n          <TableColumnResizing defaultColumnWidths={defaultColumnWidths} />\n          <TableHeaderRow showSortingControls />\n          <TableFilterRow />\n          <Template name=\"root\">  \n            <TemplateConnector>  \n              {({ rows: filteredRows }) => { \n                console.log(\"filteredRows\"); \n                console.log(filteredRows);\n                updateData(filteredRows);  \n                return <TemplatePlaceholder />;  \n              }}  \n            </TemplateConnector>  \n          </Template>\n        </Grid>\n      </Paper>\n    );\n  }\n}\n/*\n\n                <FilteringState defaultFilters={[]} />\n                <IntegratedFiltering />\n                <SortingState defaultSorting={[{ columnName: 'status', direction: 'desc' }]} />\n                <IntegratedSorting />\n                <StatusTypeProvider \n                    for={statusColumns}\n                />\n                <VirtualTable\n                    height=\"auto\"\n                />\n                <TableColumnResizing defaultColumnWidths={defaultColumnWidths} />\n                <TableHeaderRow showSortingControls />\n                <TableFilterRow />\n\n*/\nexport default GridData;\n","import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { VictoryBar, VictoryChart, Bar, VictoryTheme } from \"victory\";\n\nconst getSummaryData = dat => {\n  let data = dat.map(feature => feature.properties);\n  let tilfl = data.filter(x => {\n    return x.status === \"Tilflytter\";\n  }).length;\n  let frafl = data.filter(x => x.status === \"Fraflytter\").length;\n  let oph = data.filter(x => x.status === \"Ophørt\").length;\n  let ny = data.filter(x => x.status === \"Nystartet\").length;\n  return [\n    { x: \"Fraflytter\", y: frafl },\n    { x: \"Tilflytter\", y: tilfl },\n    { x: \"Ophørt\", y: oph },\n    { x: \"Nystartet\", y: ny }\n  ];\n};\n\n// const getSummaryPerCategory = data => {\n//   let _data = data.map(feature => feature.properties);\n//   let stats = {\n//     fraflytter: {},\n//     tilflytter: {},\n//     ophoert: {},\n//     nystartet: {}\n//   };\n//   let summary = {\n//     fraflytter: _data.filter(x => x.status === \"Fraflytter\"),\n//     tilflytter: _data.filter(x => x.status === \"Tilflytter\"),\n//     ophoert: _data.filter(x => x.status === \"Ophørt\"),\n//     nystartet: _data.filter(x => x.status === \"Nystartet\")\n//   };\n//   for (let key in summary) {\n//     let elem = summary[key];\n//     elem.forEach(category => {\n//       // console.log('category name =>', category);\n//       let k = category.hovedbranche;\n//       if (k in stats[key]) {\n//         stats[key][k] = stats[key][k] + 1;\n//       } else {\n//         stats[key][k] = 1;\n//       }\n//     });\n//   }\n//   return stats;\n// };\n/*\nconst getBrancheData = data => {\n  let _data = data.map(feature => feature.properties);\n  let stats = {};\n  _data.forEach(element => {\n    let key = element.hovedbranche;\n    if (key in stats) {\n      stats[key] = stats[key] + 1;\n    } else {\n      stats[key] = 0;\n    }\n  });\n  return stats;\n};\n*/\nclass GraphData extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      clicked: false,\n      style: {\n        data: { fill: \"tomato\" }\n      }\n    };\n  }\n\n  render() {\n    const handleMouseOver = () => {\n      const fillColor = this.state.clicked ? \"blue\" : \"tomato\";\n      const clicked = !this.state.clicked;\n      this.setState({\n        clicked,\n        style: {\n          data: { fill: fillColor }\n        }\n      });\n    };\n\n    let catData = getSummaryData(this.props.data);\n    //let sumData = getSummaryPerCategory(this.props.data);\n\n    return (\n      <div>\n        <Paper style={{ height: 800, width:800 }}>\n\n          <VictoryChart\n            height={200}\n            width={300}\n            // domainPadding={{ x: 50, y: [0, 20] }}\n            theme={VictoryTheme.material}\n            domainPadding={15}\n            // scale={{ x: \"time\" }}\n          >\n            <VictoryBar\n              // barRatio={0.4}\n              barWidth={8}\n              dataComponent={<Bar events={{ onMouseOver: handleMouseOver }} />}\n              style={{\n                data: {\n                  fill: d => {\n                    //console.log(\"inside fill \", d);\n                    if (d.datum.x === \"Fraflytter\") return \"orange\";\n                    if (d.datum.x === \"Tilflytter\") return \"green\";\n                    if (d.datum.x === \"Ophørt\") return \"red\";\n                    if (d.datum.x === \"Nystartet\") return \"blue\";\n                  }\n                }\n              }}\n              data={catData}\n              labels={d => d.datum.y}\n            />\n          </VictoryChart>\n        </Paper>\n      </div>\n    );\n  }\n}\n\nexport default GraphData;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles({\n  list: {\n    width: 450\n  },\n  fullList: {\n    width: \"auto\"\n  },\n  nested: {\n    paddingLeft: 30\n  }\n});\n\nexport default function TemporaryDrawer(props) {\n  const classes = useStyles();\n\n  const handleDrawer = props.handleDrawer;\n  const filterCols = props.filterCols;\n  const handleCheckedFilters = props.handleCheckedFilters;\n  const reset = props.reset;\n  const doFilter = props.doFilter;\n  const filterWords = props.filterWords;\n\n  const [opened, setOpened] = React.useState({\n    status: false,\n    postdistrikt: false,\n    postnummer: false\n  });\n\n  \n  const handleClick = text => { \n    setOpened({\n      ...opened,\n      [text]: !opened[text]\n    });\n  };\n  \n\n  const _list = (cols,key) => {\n    return cols[key].map((col, index) => (\n      <ListItem key={key + \"_\" + index} button className={classes.nested}>\n        <ListItemText primary={Object.keys(col)[0]} />\n        <ListItemSecondaryAction>\n          <Checkbox\n            checked={Object.values(col)[0]}\n            onChange={(e) => handleCheckedFilters(key + \"_\" + Object.keys(col)[0], e)}\n            edge=\"end\"\n          />\n        </ListItemSecondaryAction>\n      </ListItem>\n    ));\n  }\n  const sideList = (categories, cols) => {\n    let comps = {};\n    categories.forEach(categorie => {\n      if (cols[categorie]) {\n        comps[categorie] = _list(cols,categorie);\n      }  \n    });\n    \n    return (\n      <div className={classes.list} role=\"presentation\">\n        <List>\n        <ListItem>\n            <ListItemIcon>\n              <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={doFilter}>\n                Filtrere\n              </Button>\n            </ListItemIcon>\n            <ListItemSecondaryAction>\n              <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={reset}>\n                Nulstil\n              </Button>\n            </ListItemSecondaryAction>\n          </ListItem>\n        </List>\n        <List dense>\n          {categories.map((text, index) => (\n            <React.Fragment key={\"cat_\"+index}>\n              <ListItem button key={text} onClick={() => handleClick(text)}>\n                <ListItemText primary={text} />\n                {opened[text] ? <ExpandLess /> : <ExpandMore />}\n              </ListItem>\n              <Collapse in={opened[text]} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding dense>\n                  {comps[text]}\n                </List>\n              </Collapse>\n            </React.Fragment>\n          ))}\n        </List>\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      {/* <Button onClick={toggleDrawer('right', true)}>Open Right</Button> */}\n      <Drawer anchor=\"right\" open={props.drawerOpen} onClose={handleDrawer}>\n        {sideList(filterWords, filterCols)}\n      </Drawer>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SendIcon from \"@material-ui/icons/Send\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\n\nimport moment from \"moment\";\nimport \"moment/locale/da\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CloudDownload from \"@material-ui/icons/CloudDownload\";\nimport Map from \"@material-ui/icons/Map\";\nimport TableChart from \"@material-ui/icons/TableChart\";\nimport BarChart from \"@material-ui/icons/BarChart\";\nimport MomentUtils from \"@date-io/moment\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport { DatePicker } from \"@material-ui/pickers\";\nimport MapData from \"./Map.js\";\nimport GridData from \"./Grid.js\";\nimport GraphData from \"./Graph.js\";\n\nimport \"./App.css\";\nimport classnames from \"classnames\";\nimport ReactExport from \"react-data-export\";\nimport jQuery from \"jquery\";\nimport { navigate } from \"@reach/router\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport TemporaryDrawer from \"./Drawer\";\nimport Alert from \"./Alert\";\n\nmoment.locale(\"da\");\n\n/*\nTODO:\n1. use the filtered list to update the data -- done\n2. add reset btn to the list -- done\n3. Filteredrows to update csv_data. now excel is up to date -- done\n3. Finish the table component to the extra requested columns -- need to be done\n4. Fix map renderfeatures when data is empty\n5. make list to filter generic, not hard coded\n*/\n\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\nconst filterWords = [\"status\", \"virksomhedsform\", \"hovedbranche\"];\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  },\n  dense: {\n    marginTop: 19\n  },\n  menu: {\n    width: 300\n  },\n  progress: {\n    margin: theme.spacing(1) * 2\n  },\n  nested: {\n    paddingLeft: theme.spacing(4)\n  }\n});\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n    suppressDeprecationWarnings: true\n  }\n});\n\n//TODO: complete the select  comp!!!\nfunction uniqueValues(colValues) {\n  let vals = [...new Set(colValues)];\n  // console.log(vals);\n  return vals;\n}\n\nconst getVirkForm = form =>{\n  switch(form){\n    case 10 : return \"Enkeltmandsvirksomhed\";\n    case 15 : return \"Personligt ejet Mindre Virksomhed\";\n    case 20 : return \"Dødsbo\";\n    case 30 : return \"Interessentskab\";\n    case 40 : return \"Kommanditselskab\";\n    case 45 : return \"Medarbejderinvesteringsselskab\";\n    case 50 : return \"Partrederi\";\n    case 60 : return \"Aktieselskab\";\n    case 70 : return \"Kommanditaktieselskab/Partnerskab\";\n    case 80 : return \"Anpartsselskab\";\n    case 81 : return \"Iværksætterselskab\";\n    case 90 : return \"Fond\";\n    case 100 : return \"Erhvervsdrivende fond\";\n    case 110 : return \"Forening\";\n    case 115 : return \"Frivillig forening\";\n    case 130 : return \"Andelselskab(-forening)\";\n    case 140 : return \"Andelselskab(-forening) med begrænset ansvar\";\n    case 150 : return \"Forening eller selskab med begrænset ansvar\";\n    case 151 : return \"Selskab med begrænset ansvar\";\n    case 152 : return \"Forening med begrænset ansvar\";\n    case 160 : return \"Europæisk Økonomisk Firmagruppe\";\n    case 170 : return \"Filial af udenlandsk aktieselskab, kommanditakties\";\n    case 180 : return \"Filial af udenlandsk anpartselskab eller selskab\";\n    case 190 : return \"Filial af udenlandsk virksomhed med begrænset ansv\";\n    case 195 : return \"SCE-selskab\";\n    case 196 : return \"Filial af SCE-selskab\";\n    case 200 : return \"Filial af anden udenlandsk virksomhed\";\n    case 210 : return \"Anden udenlandsk virksomhed\";\n    case 220 : return \"Fast forretningssted af Europæisk økonomisk Firmag\";\n    case 230 : return \"Offentlige arbejdsplads\";\n    case 235 : return \"Offentlige arbejdsplads\";\n    case 245 : return \"Offentlige arbejdsplads\";\n    case 250 : return \"Offentlige arbejdsplads\";\n    case 260 : return \"Folkekirkelige institutioner\";\n    case 270 : return \"Enhed under oprettelse i Erhvervs- og Selskabsstyr\";\n    case 280 : return \"Øvrige virksomhedsformer\";\n    case 285 : return \"Særlig finansiel virksomhedsform\";\n    case 290 : return \"SE-selskab\";\n    case 291 : return \"Filial af SE-selskab\";\n    case 990 : return \"Uoplyst virksomhedsform\";\n    default : return form;\n  }\n}\n\nfunction uniqueValuesGroupedByKey(arrOfObj, keys) {\n  // const keys = Object.keys(arrOfObj[0]);\n  //console.log(keys);\n  let ret = {};\n\n  function uniqueElemsOfSameKey(_arrOfObj, key) {\n    const values = _arrOfObj.map(elem => elem[key]);\n    let ret  = uniqueValues(values);\n    ret = ret.map(elem => ({[elem] :false}));\n    return ret;\n  }\n\n  keys.forEach(key => {\n    ret[key] = uniqueElemsOfSameKey(arrOfObj, key);\n  });\n\n  return ret;\n}\n\nfunction TabContainer(props) {\n  return <div>{props.children}</div>;\n}\n\nTabContainer.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0,\n      startDate: moment()\n        .subtract(1, \"months\")\n        .startOf(\"month\")\n        .format(\"YYYY-MM-DD\"),\n      endDate: moment()\n        .subtract(1, \"months\")\n        .endOf(\"month\")\n        .format(\"YYYY-MM-DD\"),\n      data: [],\n      kommuner: [],\n      komkode: this.props.komnr,// || '165',\n     \n      csvData: [], // used for Excel print\n      loading: true,\n      completed: 0,\n      canSendRequest: false,\n      filterOpen: false,\n      drawerOpen: false,\n      alertOpen: false,\n      alertMessage: '',\n      uniqueVals: {},\n      /*\n      This is the data which will be rendered and printed by the excel component.\n      All filtering will act on this array. \n      The reset button will reset this arrat to \n              dataToRender = this.state.data or this.state.csvData;\n      */\n      dataToRender: [] \n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleStart = this.handleStart.bind(this);\n    this.handleEnd = this.handleEnd.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n    this.handleDoneClick = this.handleDoneClick.bind(this);\n    this.handleFilterOpen = this.handleFilterOpen.bind(this);\n    this.handleFilterClose = this.handleFilterClose.bind(this);\n    this.handleDrawerOpen = this.handleDrawerOpen.bind(this);\n    this.handleCheckedFilters = this.handleCheckedFilters.bind(this);\n    this.reset = this.reset.bind(this);\n    this.updateRenderDataFromTable = this.updateRenderDataFromTable.bind(this);\n    this.doFilter = this.doFilter.bind(this);\n    this.onAlertClose = this.onAlertClose.bind(this);\n  }\n\n  onAlertClose(){\n    this.setState({alertOpen: false});\n  }\n\n  doFilter(){\n    const uniqueVals = this.state.uniqueVals;\n    const filteredCategories = Object.keys(uniqueVals);\n    // console.log(filteredCategories);\n    let filters = {};\n     filteredCategories.forEach(cat =>{\n      let temp = uniqueVals[cat];\n      // console.log(temp)\n      filters[cat] = temp.filter(obj => {\n        return Object.values(obj)[0] === true;\n      })\n     .map(elem => {\n        return Object.keys(elem)[0];\n      }); \n     });\n     const dataToRender = this.state.dataToRender;\n     const data = dataToRender.filter(row => {\n      let res = true;\n      filteredCategories.forEach(key =>{\n      //  console.log(row.properties[key]);\n      if(filters[key].length > 0 \n        && filters[key].indexOf(row.properties[key]) === -1)\n             res = false;\n      });\n      return res;\n     });\n     const message = `${data.length} ud af ${this.state.data.length}`;\n     this.setState({\n       dataToRender : data, \n       drawerOpen : false,\n       alertMessage: message,\n       alertOpen: true\n      });\n     \n  }\n\n  updateRenderDataFromTable(filteredRows){\n    console.log('filtered rows');\n    this.setState({csvData: filteredRows});\n  }\n\n  reset(){\n    this.setState({\n      dataToRender: this.state.data, \n      uniqueVals: uniqueValuesGroupedByKey(\n        this.state.data.map(feature => feature.properties), \n        filterWords\n        )\n    });\n  }\n\n  handleCheckedFilters(text, event){ //console.log('called with => ', text)\n    let [group, name] = text.split(\"_\");\n    let checkedGroup = this.state.uniqueVals[group];\n    let indexToUpdate = checkedGroup.findIndex(elem => Object.keys(elem)[0] === name);\n    let elementToUpdate = checkedGroup[indexToUpdate];\n    //Toggle to false or true\n    elementToUpdate[name] = !elementToUpdate[name];\n\n    this.setState({uniqueVals:{\n      ...this.state.uniqueVals,\n      [group]: [\n        ...checkedGroup.slice(0,indexToUpdate),\n        elementToUpdate,\n        ...checkedGroup.slice(indexToUpdate+1)\n      ]\n    }});\n  }\n\n  handleFilterOpen() {\n    this.setState({ filterOpen: !this.state.filterOpen });\n  }\n\n  handleDrawerOpen() {\n    this.setState({ drawerOpen: !this.state.drawerOpen });\n  }\n\n  handleFilterClose() {\n    this.setState({ filterOpen: false });\n  }\n\n  getKommuner() {\n    let komUrl =\n      \"https://drayton.mapcentia.com/api/v1/sql/ballerup?q=select right(komkode, 3)::int komkode, \" +\n      \"komnavn from data.kommune group by komkode, komnavn order by komnavn\";\n    komUrl = \"kom.json\";\n    let that = this;\n    jQuery.ajax({\n      url: komUrl,\n      type: \"GET\",\n      dataType: \"json\",\n      success: function(res) {\n        let koms = res.features.map(feature => feature.properties);\n        that.setState(preveState => ({ kommuner: koms }));\n      }\n    });\n  }\n\n  getData(komkode, startDate, endDate) {\n    this.setState(preveState => ({ csvData: [], loading: true }));\n    let that = this;\n    if (!komkode) {\n      this.setState({ loading: false });\n      return;\n    }\n    let dataUrl =\n      \"https://drayton.mapcentia.com/api/v1/sql/ballerup?q=SELECT * FROM cvr.flyt_fad_dev(\" +\n      komkode +\n      \",'\"+ startDate +\"','\"+ endDate +\"')&srs=4326\";\n   // dataUrl = \"data.json\";\n    // console.log(dataUrl);\n    jQuery.ajax({\n      url: dataUrl,\n      type: \"GET\",\n      dataType: \"jsonp\",\n      success: function(res) {\n        //that.setState(preveState => ({ data: res.features }));\n        // console.log(res.features);\n        let csv = res.features.map(feature => feature.properties);\n        res.features.forEach(feature => {\n          let form = feature.properties.virksomhedsform;\n          feature.properties.virksomhedsform = getVirkForm(form);\n        });\n        that.setState(prevState => ({\n          csvData: csv,\n          data: res.features,\n          dataToRender: res.features,\n          loading: false,\n          uniqueVals: uniqueValuesGroupedByKey(csv,filterWords)\n        }));\n      }\n    });\n  }\n\n  handleSelect(event) {\n    event.persist();\n    this.setState(prevState => ({ komkode: event.target.value }));\n  }\n\n  componentDidMount() {\n    let { komkode, startDate, endDate } = this.state;\n    this.getData(komkode, startDate, endDate);\n    this.getKommuner();\n  }\n\n  componentWillUnmount() {\n    //clearInterval(this.timer);\n  }\n\n  handleChange(event, value) {\n    this.setState({ value });\n  }\n\n  handleDoneClick() {\n    let { komkode, startDate, endDate } = this.state;\n    if(!komkode) komkode = 165;\n    this.getData(komkode, startDate, endDate);\n    navigate(\"#/\" + komkode);\n  }\n\n  handleStart(date) {\n    this.setState({\n      startDate: date.format(\"YYYY-MM-DD\")\n    });\n  }\n\n  handleEnd(date) {\n    this.setState({\n      endDate: date.format(\"YYYY-MM-DD\")\n    });\n  }\n\n  render() {\n    const { value, startDate, endDate, kommuner, komkode } = this.state;\n    const locale = \"da\";\n    return (\n      <MuiThemeProvider theme={theme}>\n        <div className=\"app\">\n          <div className={this.state.loading ? \"loading\" : \"\"}></div>\n          \n          <TemporaryDrawer\n            handleDrawer={this.handleDrawerOpen}\n            drawerOpen={this.state.drawerOpen}\n            filterCols={this.state.uniqueVals}\n            handleCheckedFilters={this.handleCheckedFilters}\n            reset={this.reset}\n            doFilter={this.doFilter}\n            filterWords={filterWords}\n          />\n\n          {/* <Alert \n            open={this.state.alertOpen}\n            message={this.state.alertMessage}\n            onClose={this.state.onAlertClose}\n          /> */}\n          <div className=\"\">\n            <AppBar position=\"static\" color=\"default\">\n              <Toolbar>\n                <Grid container /*spacing={}*/>\n                  <Grid item xs={3}>\n                    <Typography variant=\"h6\" color=\"inherit\">\n                      CVR Flyttemønster\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={2}>\n                    <form\n                      className={classnames.container}\n                      noValidate\n                      autoComplete=\"off\"\n                    >\n                      <TextField\n                        id=\"standard-select\"\n                        select\n                        label=\"Kommune\"\n                        placeholder=\"Placeholder\"\n                        className={classnames.textField}\n                        value={this.state.komkode || \"\"}\n                        onChange={this.handleSelect}\n                        SelectProps={{\n                          native: true\n                        }}\n                        helperText=\"\"\n                        InputLabelProps={{ shrink: true }}\n                      >\n                        {kommuner.map(kom => {\n                          let selected =\n                            this.state.komkode === kom.komkode\n                              ? \"selected\"\n                              : false;\n                          // if (selected) console.log(kom.komnavn);\n                          return (\n                            <option key={kom.komkode} value={kom.komkode}>\n                              {kom.komnavn}\n                            </option>\n                          );\n                        })}\n                      </TextField>\n                    </form>\n                  </Grid>\n                  <Grid item xs={2}>\n                    <MuiPickersUtilsProvider\n                      utils={MomentUtils}\n                      locale={locale}\n                      moment={moment}\n                    >\n                      <DatePicker\n                        value={startDate}\n                        label=\"Startdato\"\n                        format=\"DD MMM YYYY\"\n                        onChange={this.handleStart}\n                      />\n                    </MuiPickersUtilsProvider>\n                  </Grid>\n                  <Grid item xs={2}>\n                    <MuiPickersUtilsProvider utils={MomentUtils}>\n                      <DatePicker\n                        value={endDate}\n                        label=\"Slutdato\"\n                        format=\"DD MMM YYYY\"\n                        onChange={this.handleEnd}\n                      />\n                    </MuiPickersUtilsProvider>\n                  </Grid>\n                  {/* <Grid item xs={1}></Grid> */}\n                  <Grid item xs={3}>\n                    <IconButton\n                      arial-label=\"Done\"\n                      onClick={this.handleDoneClick}\n                    >\n                      <Tooltip title=\"Send\">\n                        <SendIcon />\n                      </Tooltip>\n                    </IconButton>\n                    <IconButton\n                      arial-label=\"Filter\"\n                      onClick={this.handleDrawerOpen}\n                    >\n                      <Tooltip title=\"Filter\">\n                        <FilterListIcon />\n                      </Tooltip>\n                    </IconButton>\n                    {this.state.csvData.length > 0 && (\n                      <ExcelFile\n                        element={\n                          <IconButton arial-label=\"Excel\">\n                            <Tooltip title=\"Download Excel\">\n                              <CloudDownload />\n                            </Tooltip>\n                          </IconButton>\n                        }\n                        filename={\n                          \"export_\" + komkode + \"_\" + startDate + \"_\" + endDate\n                        }\n                      >\n                        <ExcelSheet data={this.state.csvData} name=\"CVR\">\n                          <ExcelColumn label=\"Status\" value=\"status\" />\n                          <ExcelColumn label=\"CVR nummer\" value=\"cvr-nummer\" />\n                          <ExcelColumn label=\"P nummer\" value=\"p-nummer\" />\n                          <ExcelColumn label=\"Branche\" value=\"hovedbranche\" />\n                          <ExcelColumn label=\"virksomhedsform\" value=\"virksomhedsform\" />\n                          <ExcelColumn label=\"Virksomhedsnavn\" value=\"navn\" />\n                          <ExcelColumn\n                            label=\"Kontaktperson\"\n                            value=\"fuldt ansvarlige deltagere\"\n                          />\n                          <ExcelColumn label=\"kvartalbes_interval\" value=\"Antal ansatte\" />\n                          <ExcelColumn\n                            label=\"Kommunekode\"\n                            value=\"kommunekode\"\n                          />\n                          <ExcelColumn label=\"vejnavn\" value=\"vejnavn\" />\n                          <ExcelColumn label=\"Husnummer\" value=\"husnummer\" />\n                          <ExcelColumn label=\"Postnummer\" value=\"postnummer\" />\n                          <ExcelColumn label=\"By\" value=\"postdistrikt\" />\n                          <ExcelColumn label=\"Email\" value=\"emailadresse\" />\n                          <ExcelColumn\n                            label=\"Indlæst dato\"\n                            value=\"indlæst dato\"\n                          />\n                        </ExcelSheet>\n                      </ExcelFile>\n                    )}                \n                  </Grid>\n\n                  {/* <Grid item xs={2}>\n                    <IconButton\n                      arial-label=\"Filter\"\n                      onClick={this.handleDrawerOpen}\n                    >\n                      <FilterListIcon />\n                    </IconButton>\n                  </Grid> */}\n\n                  {/* <Grid item xs={2}>\n                    {this.state.csvData.length > 0 && (\n                      <ExcelFile\n                        element={\n                          <IconButton arial-label=\"Excel\">\n                            <CloudDownload />\n                          </IconButton>\n                        }\n                        filename={\n                          \"export_\" + komkode + \"_\" + startDate + \"_\" + endDate\n                        }\n                      >\n                        <ExcelSheet data={this.state.csvData} name=\"CVR\">\n                          <ExcelColumn label=\"Status\" value=\"status\" />\n                          <ExcelColumn label=\"CVR nummer\" value=\"cvr-nummer\" />\n                          <ExcelColumn label=\"P nummer\" value=\"p-nummer\" />\n                          <ExcelColumn label=\"Branche\" value=\"hovedbranche\" />\n                          <ExcelColumn label=\"virksomhedsform\" value=\"virksomhedsform\" />\n                          <ExcelColumn label=\"Virksomhedsnavn\" value=\"navn\" />\n                          <ExcelColumn\n                            label=\"Kontaktperson\"\n                            value=\"fuldt ansvarlige deltagere\"\n                          />\n                          <ExcelColumn label=\"kvartalbes_interval\" value=\"Antal ansatte\" />\n                          <ExcelColumn\n                            label=\"Kommunekode\"\n                            value=\"kommunekode\"\n                          />\n                          <ExcelColumn label=\"vejnavn\" value=\"vejnavn\" />\n                          <ExcelColumn label=\"Husnummer\" value=\"husnummer\" />\n                          <ExcelColumn label=\"Postnummer\" value=\"postnummer\" />\n                          <ExcelColumn label=\"By\" value=\"postdistrikt\" />\n                          <ExcelColumn label=\"Email\" value=\"emailadresse\" />\n                          <ExcelColumn\n                            label=\"Indlæst dato\"\n                            value=\"indlæst dato\"\n                          />\n                        </ExcelSheet>\n                      </ExcelFile>\n                    )}\n                  </Grid> */}\n                </Grid>\n              </Toolbar>\n            </AppBar>\n\n            <Tabs value={value} onChange={this.handleChange} centered>\n              <Tab\n                icon={\n                  <Tooltip title=\"Kort\">\n                    <Map />\n                  </Tooltip>\n                }\n              />\n              <Tab\n                icon={\n                  <Tooltip title=\"Tabel\">\n                    <TableChart />\n                  </Tooltip>\n                }\n                aria-label=\"Tabel\"\n              />\n              <Tab\n                icon={\n                  <Tooltip title=\"Histogram\">\n                    <BarChart />\n                  </Tooltip>\n                }\n              />\n              \n            </Tabs>\n            {value === 0 && (\n              <TabContainer>\n                <MapData data={this.state.dataToRender} />\n              </TabContainer>\n            )}\n            {value === 1 && (\n              <TabContainer>\n                <GridData \n                  data={this.state.dataToRender} \n                  updateData={this.updateRenderDataFromTable}\n                  total={this.state.data.length}\n                  totalRendered={this.state.csvData.length}\n                  />\n              </TabContainer>\n            )}\n            {value === 2 && (\n              <TabContainer>\n                <GraphData data={this.state.dataToRender} />\n              </TabContainer>\n            )}\n          </div>\n        </div>\n   \n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n\n","import React from \"react\";\nimport { createHistory, LocationProvider, Router } from \"@reach/router\";\nimport createHashSource from \"hash-source\";\nimport App from \"./App\";\n\nlet source = createHashSource();\nlet history = createHistory(source);\n\nconst Home = () => (\n  <LocationProvider history={history}>\n    <Router>\n      <App path=\"/\" />\n      <App path=\"/:komnr\" />\n    </Router>\n  </LocationProvider>\n);\n\nexport default Home;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n//import App from './App';\nimport Home from \"./Home\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<Home />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}